#
# Create 'crustls.lib' and 'src/crustls.h' for Windows using
# 'cl' or 'clang-cl'.
#
export CL=


USE_CLANG_CL ?= 0

CFLAGS     = -nologo -MD -Zi -W3 -I. -Dssize_t=int -D_CRT_SECURE_NO_WARNINGS
LDFLAGS    = -nologo -incremental:no
CARGOFLAGS =

PROFILE = debug
CRUSTLS_LIB = target/$(PROFILE)/crustls.lib

ifeq ($(PROFILE), release)
	CFLAGS += -O3
	CARGOFLAGS += --release
endif

ifeq ($(USE_CLANG_CL),1)
  CC = clang-cl
  CFLAGS += -ferror-limit=5
else
  CC = cl.exe
endif

all: src/crustls.h $(CRUSTLS_LIB) target/$(PROFILE)/crustls-demo.exe

test: all
	./target/$(PROFILE)/crustls-demo.exe httpbin.org /headers

src/crustls.h: src/lib.rs
	cbindgen --lang C --output $@
	@echo

target/$(PROFILE)/crustls-demo.exe: main.obj $(CRUSTLS_LIB)
	link $(LDFLAGS) -out:$@ $^
	@echo

$(CRUSTLS_LIB): src/lib.rs Cargo.toml
	cargo build $(CARGOFLAGS)
	@echo

main.obj: src/main.c src/crustls.h
	$(CC) -Fo$@ -c $< $(CFLAGS)
	@echo

clean:
	rm -f *.obj target/.rustc_info.json $(CRUSTLS_LIB) src/crustls.h vc1*.pdb
	rm -fR target/*
	rmdir target

